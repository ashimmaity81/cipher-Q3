#include <bits/stdc++.h>
using namespace std;
bool canTransportInTime(const vector<int>& time, long long totalTrips, long long mid) {
    long long trips = 0;
    for (int t : time) {
        trips += mid / t;
        if (trips >= totalTrips) {
            return true;
        }
    }
    return trips >= totalTrips;
}

long long minTimeToTransport(const vector<int>& time, long long totalTrips) {
    long long left = 1;
    long long right = *min_element(time.begin(), time.end()) * totalTrips;
    while (left < right) {
        long long mid = left + (right - left) / 2;
        if (canTransportInTime(time, totalTrips, mid)) {
            right = mid;
        } else {
            left = mid + 1;
        }
    }
    return left;
}

int main() {
    vector<int> t1 = {1, 2, 3};
    long long total1 = 5;
    cout << "Output : " << minTimeToTransport(t1, total1) << endl;

    vector<int> t2 = {2};
    long long total2 = 1;
    cout << "\nOutput : " << minTimeToTransport(t2, total2) << endl;
    return 0;
}
